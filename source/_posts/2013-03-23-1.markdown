---
layout: post
title: "Niigata.LLに参加して来ました"
date: 2013-03-23 20:00
comments: true
categories: Study Niigata.LL
---
本日は

以下今日の発表の簡単なまとめです。

<!--more-->
## 発表まとめ
### @nekokusa SL4Aでとび森を捗らせたかった
Scripting Layer for Android。Android上でScript言語が動く。例えばPython Perl Ruby etc...  Javaできなくてもアプリ作れるし、AndroidのAPIにアクセス可能。電話、メールなど。
　QRコードスキャナにQRコードの読み取り・作成まるなげ
とび森
　マイデザインをQRコード出力可能
カメラで撮影した画像をマイデザイン形式に変換してQRコードで作成出来れば捗る
失敗…
マイデザインのQRコードの中身は独自形式のバイナリデータ
QRコードスキャナは未対応形式のものはテキストとして読み取る
Unicode文字列で表示できない文字が<?>になる
　この部分を改善すればどうにかなる？
自分用のちょっとしたプログラムが簡単に作れる
カメラや各センサーを簡単に扱える
携帯上だけでもコード書ける

実行速度は？
　体感はJavaと大差無し

### @masaru_b_cl C#はLLですが何か？
[資料](http://www.slideshare.net/masaru_b_cl/lightweight-c)
[LTSV（Labeled Tab-separated Values）](http://ltsv.org/)
Ex.
    hoge:foo\tbar:baz\n
[DynamicLTSV：LTSVライブラリ](https://github.com/masaru-b-cl/DynamicLTSV)

### @mihyaeru21 PythonのGCについて何か
ガベージコレクションの手法の説明
マークスイープGC
　生きているオブジェクトをマーク
　　ヒープをスキャンして生きてないオブジェクトを削除
　　　「元となる場所」から参照を辿ってたどり着けるオブジェクトは生きている
　　　たどり着けないものは死んでいる
　　実装が簡単
　　ヒープが断片化する
　　アロケーションが遅い
参照カウント
　参照されている数を記憶
　参照数が0になったら破棄
　不要なオブジェクトが即破棄される
　実行が短い
　循環参照オブジェクトを破棄できない
　余計な処理・メモリが必要
　実装が面倒
コピーGC
　ヒープを半分に分割
　生きているオブジェクトだけを使用していない方の領域にコピー
　ヒープが断片化しない
　アロケーションが早い
　ヒープが半分しか使えない　

発展的なもの
　３つを組み合わせたもの
　新しいオブジェクトを優先的にGC
　　世代別GC
　など

最強のGCは無い

### @toby55kij Groovyの紹介
JavaVM上で動作する動的なプログラミング言語　LLなはず
Javaとの相性が良い
Javaのコードがほぼそのまま動く
Javaを強化する機能
　クロージャー
　演算子オーバーロード
　JDKを拡張したGroovy JDK （GDK）
　便利なライブラリ Groovy API
プログラミングGROOVY 技術評論社 <- おすすめらしい
　NTT系の某セミナーに行くともらえるらしい

Javaのコードの拡張子を.groovyに変えるだけでも動く
セミコロンやカッコも省略可能

Grails
　webアプリフレームワーク
Griffon
　デスクトップアプリケーションフレームワーク
Gradle
　ビルドツール
GroobyServ
　常駐化で高速起動
その他
　Gaelyk、Gpars、GroovyFX
　
パフォーマンスはスクリプト単体だと遅い
最近実装された静的な型チェックや静的コンパイル機能を使ってやると結構早い
　Javaより少し遅い程度？

日本Grails/Groovyユーザーグループ
http://www.jggug.org/


### @jewel12 Padrinoでオンラインブックマークサービスを作った
鯛虎というブックマークサービスを適当に作った
Title:鯛　Transration:虎
Web記事タイトルをみんなでひたすら翻訳するサービス
http://titra.herokuapp.com
海外Web記事の要約を共有しよう
海外の記事にメモを付けるサービスがほしい->見出しを再翻訳しなくて住むように
Knohとか出てきてるし、今後記事翻訳系サービスが面白くなるのでは？
　
Sinatora
　軽量WebアプリケーションDSL
　シンプル
　似たもの
　　Mojolicious::lite　Dancer：Perl
　　Flask　Juno：Python
　　Slim　Silex：PHP

Padrino
　Sinatoraベース（Sinatoraを拡張）のWebアプリケーション作成フレームワーク
　Sinatora　＋　
　　　ロガー
　　　ヘルパー
　　　ジェネレータ
　　　Rails風MVCの導入
　　　メール配信機能
　　　管理画面
　　　View用ヘルパー
　　　多言語対応
　　　などもろもろ
　おなじみのディレクトリ構成をいちいち手動で作る必要がない
　必要な機能のみ選択して拡張可

### @aokcub CGIを軽量WAFにリプレースして捗った話
Mojolicious
　Perlの軽量WAF（Web Application Framework）
　公式の日本語ドキュメントが充実している
　多機能
　　テンプレート
　　開発用サーバ・開発用SSL証明書
　　Json
　　websoket
　　など
足りないところはCPANで
　データベース
　セッション管理
　など
開発用サーバ
　morbo
　　オートリロード付き
　Plack
　　Perlのサーバーフレームワーク　
　　
Perlで小粒なアプリケーションをつくるならMojolicious::lite一択！

### @hayajo Cinnamon
Cinnamon
　Perl製デプロイツール
　複数ホストに対して、アプリケーションをガッとデプロイ
　他言語
　　Capistrano(Ruby)
　　Fabric(Python)
　CPANでインストール可
実態
　SSHでホストに接続してコマンド実行
　Role x Task で柔軟に対応
Role
　development
　　hoge.local developmentブランチ
　production
　　fuga.example.com masterブランチ　supervisorでデーモン管理
　etc...
Task
　リポジトリからリソースを取得/更新
　必要なライブラリのインストール
　など
　
同時実行
タスク・イン・タスク
などはこれから実装される？
シンプルだけどまだまだこれから
DSLは基本的に学習コスト高
Fabricよさげなので、Pythonに抵抗ない人はそっち使おう！というオチ

### @bei_kan Excel VBAのユニットテスト
XLUnit
　わけわかめ
VBAUnit
　手間がかかる割には使いづらい
VBAUnit(jp)
　日本語の関数名が使える
　レッド/グリーンバーがある
　関数を追加するだけでテスト追加
　対象とテストのファイル分離可
　対象のソースをあまり汚さない
　非常に良い
　VBAであまり組みたくないというオチ

### @joe_noh Introduction to Scala
Scala入門編
オブジェクト指向＋関数型≠関数型
　オブジェクト指向で作っていい
　副作用があってもいい
　JavaにRubyを足した感じ
　すべてオブジェクト（型も）
　トレイとを使ってMix-in
Javaのライブラリが使える
Javaより簡潔に書ける
　型推論
並列処理や再帰が得意

コンパイルとJVM起動がややもっさり
言語仕様が複雑
Listのインスタンスメソッド名が意味不明
　++ ++: +: /: :+ etc...
　名が体を表していない
ビルドツール
　sbt
Webアプリフレームワーク
　Lift
　Play
拡張ライブラリ
　scalaz
　　こういうことやるからScalaは怖い的なことを言われる
　　最初は使わなくてもおｋ
ドキュメント
Scala スケーラブルプログラミング　最初におすすめ
プログラミングScala　難易度高め・2冊めに

### @salinger001101 OctopressとGithub Pages
発表してきました
LLと相性のいいブログ作成
資料は[こちら]()

### @dictav mruby
MONO Ruby とは
　mrubyともの作りのコラボイベント
　３Dプリンタの話など
　すでにmrubyが組み込まれた製品の話
mruby
　軽量ruby
　組み込み向け
発展途上
日本語で参加可能なオープンソースプロジェクト
プロジェクトの規模は大きいけどソースコードはまだ小さい
pull requestを！

mrbgems
　mrubyを拡張する仕組み
　mrubyコンパイル時にlimmrubyに機能を組み込む
　基本的な組み込み関数もこれで提供

Matzのコードレビューが受けられる
mrubyの先駆者になれる
twitterでちやほやされる

### @isiduca JS TDD (and Test) with your language
基本的にPerl＋JSの話。
* クライアント（ブラウザ）を使うテスト
** PhantomJS
*** ヘッドレス（画面のない）ブラウザ
* 単体（ユニット）テスト
** QUnit
*** ボキャブラリ・機能が限定的
*** 学習コストが少ない
* コマンドライン上からのテスト
** QUnit-TAP
*** コマンドライン向けに結果を出力するプラグイン
** prove
*** コマンドラインツール
*** perl以外のテストもおｋ
更新に合わせたテストの自動実行
  pfswatch
    監視したいディレクトリやファイルの更新に合わせて任意のコマンドを実行する
テスト結果の通知を音声で
  [with-sound](http://d.hatena.ne.jp/moznion/20130305/1362467136)
    コマンドが成功するか失敗するかによってその結果に対応した音声が流れる

### @kasacchiful PowerShellの話
PowerShellはWindows用のShell。Win7は2.0、Win8は3.0。MS製品との親和性が高い。例えばSQLServerとかActiveDirectoryとか。基本Shellだが、VBScriptの代替にも使える。
* lsって入力できる！エイリアスが登録できる（lsもdirもエイリアス）。
* csvファイルの読み書きが簡単。
* スクリプトファイルに保存、実行できる。
* .NET Frameworkのクラスライブラリが使える。
* パイプが使える。
* .NET Frameworkのオブジェクトが渡せる。
* オブジェクト指向プログラミングができる。
* IDEが標準で付属。
* サーバー管理機能。
* テストツール
* 例外処理
* 文字コード周りの処理などもある。

もはやなんでもあり。なんだかLLっぽい。

### @neko_gata_s Perlなめんな
[資料](https://gist.github.com/Shinpeim/5220843)のみの参加。  
最近のPerlの可読性・オブジェクト指向（Mouse）や例外（Try::Lite）のお話。There's More Than One Way To Do It. 「やりかたはひとつではない」的な観点に基づくと別にPerlにこだわりすぎる必要もない。

### @su8erlemon いままで作ったもののお話
[サイト](http://su8erlemon.com)にAdobe Airとか[openFrameworks](http://www.openframeworks.cc)で制作。[ミーム DE ディスカッション](http://su8erlemon.com/meme6/)とか。プロジェクトマッピングとかのお話も。視覚化のレベル高かった。

### @shogo82148 JO_RI_botの紹介
@JO_RI_bot のお話。いわゆる人工無能。圧縮新聞とかしゅうまい君の仲間。Twitterでリプライを送るだけで様々な機能が利用可能。
ぬるぽ->ガッ
タイマー
翻訳（Bing翻訳を利用）
多言語対応
　英語
　イカ娘語
　みさくら語
　オンドゥル語
　etc...
Amazonの商品検索
本の感想（じょりくん：@JO_RI が読んだ本なら。ラノベならだいたい返ってくる）
キーワード検索
ユーザー検索
イベントの詳細
QA機能
etc..
詳細は[ここ](https://github.com/shogo82148/JO_RI_bot/wiki)

### @jewel_x12 (2回目) Scalaのパターンマッチング
豪華なCase文的なイメージ。
定数パターン
シーケンスパターン
型付きパターン
コンストラクタパターン
抽出子：インスタンスの構成要素を分解してマッチング
色々できて便利！

多機能故に学習コスト高
